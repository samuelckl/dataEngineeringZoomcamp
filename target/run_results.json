{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "2025.2.25+6d346ce", "generated_at": "2025-02-27T12:30:34.738406Z", "invocation_id": "c67b0be6-bea1-4508-bbef-a3f24012d12f", "env": {}}, "results": [{"status": "error", "timing": [{"name": "compile", "started_at": "2025-02-27T12:30:31.563546Z", "completed_at": "2025-02-27T12:30:31.601342Z"}, {"name": "execute", "started_at": "2025-02-27T12:30:31.607584Z", "completed_at": "2025-02-27T12:30:32.120167Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.569690465927124, "adapter_response": {}, "message": "Database Error in model stg_green_tripdata (models/staging/stg_green_tripdata.sql)\n  Access Denied: Table taxi-rides-ny-339813-412521:trips_data_all.green_tripdata: User does not have permission to query table taxi-rides-ny-339813-412521:trips_data_all.green_tripdata, or perhaps it does not exist.\n  compiled code at target/run/dataEngineeringZoomcamp/models/staging/stg_green_tripdata.sql", "failures": null, "unique_id": "model.dataEngineeringZoomcamp.stg_green_tripdata", "compiled": true, "compiled_code": "\n\nwith tripdata as \n(\n  select *,\n    row_number() over(partition by vendorid, lpep_pickup_datetime) as rn\n  from `taxi-rides-ny-339813-412521`.`trips_data_all`.`green_tripdata`\n  where vendorid is not null \n)\nselect\n    -- identifiers\n    to_hex(md5(cast(coalesce(cast(vendorid as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(lpep_pickup_datetime as string), '_dbt_utils_surrogate_key_null_') as string))) as tripid,\n    safe_cast(vendorid as INT64) as vendorid,\n    safe_cast(ratecodeid as INT64) as ratecodeid,\n    safe_cast(pulocationid as INT64) as pickup_locationid,\n    safe_cast(dolocationid as INT64) as dropoff_locationid,\n    \n    -- timestamps\n    cast(lpep_pickup_datetime as timestamp) as pickup_datetime,\n    cast(lpep_dropoff_datetime as timestamp) as dropoff_datetime,\n    \n    -- trip info\n    store_and_fwd_flag,\n    safe_cast(passenger_count as INT64) as passenger_count,\n    cast(trip_distance as numeric) as trip_distance,\n    safe_cast(trip_type as INT64) as trip_type,\n\n    -- payment info\n    cast(fare_amount as numeric) as fare_amount,\n    cast(extra as numeric) as extra,\n    cast(mta_tax as numeric) as mta_tax,\n    cast(tip_amount as numeric) as tip_amount,\n    cast(tolls_amount as numeric) as tolls_amount,\n    cast(ehail_fee as numeric) as ehail_fee,\n    cast(improvement_surcharge as numeric) as improvement_surcharge,\n    cast(total_amount as numeric) as total_amount,\n    coalesce(safe_cast(payment_type as INT64),0) as payment_type,\n    case safe_cast(payment_type as INT64)  \n        when 1 then 'Credit card'\n        when 2 then 'Cash'\n        when 3 then 'No charge'\n        when 4 then 'Dispute'\n        when 5 then 'Unknown'\n        when 6 then 'Voided trip'\n        else 'EMPTY'\n    end as payment_type_description\nfrom tripdata\nwhere rn = 1\n\n\n-- dbt build --select <model_name> --vars '{'is_test_run': 'false'}'\n\n\n  limit 100\n\n", "relation_name": "`dataengineering-449109`.`dbt_samuelckl`.`stg_green_tripdata`", "batch_results": null}, {"status": "error", "timing": [{"name": "compile", "started_at": "2025-02-27T12:30:31.583932Z", "completed_at": "2025-02-27T12:30:31.606922Z"}, {"name": "execute", "started_at": "2025-02-27T12:30:31.627967Z", "completed_at": "2025-02-27T12:30:32.216159Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6657125949859619, "adapter_response": {}, "message": "Database Error in model stg_yellow_tripdata (models/staging/stg_yellow_tripdata.sql)\n  Access Denied: Table taxi-rides-ny-339813-412521:trips_data_all.yellow_tripdata: User does not have permission to query table taxi-rides-ny-339813-412521:trips_data_all.yellow_tripdata, or perhaps it does not exist.\n  compiled code at target/run/dataEngineeringZoomcamp/models/staging/stg_yellow_tripdata.sql", "failures": null, "unique_id": "model.dataEngineeringZoomcamp.stg_yellow_tripdata", "compiled": true, "compiled_code": "\n \nwith tripdata as \n(\n  select *,\n    row_number() over(partition by vendorid, tpep_pickup_datetime) as rn\n  from `taxi-rides-ny-339813-412521`.`trips_data_all`.`yellow_tripdata`\n  where vendorid is not null \n)\nselect\n   -- identifiers\n    to_hex(md5(cast(coalesce(cast(vendorid as string), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(tpep_pickup_datetime as string), '_dbt_utils_surrogate_key_null_') as string))) as tripid,    \n    safe_cast(vendorid as INT64) as vendorid,\n    safe_cast(ratecodeid as INT64) as ratecodeid,\n    safe_cast(pulocationid as INT64) as pickup_locationid,\n    safe_cast(dolocationid as INT64) as dropoff_locationid,\n\n    -- timestamps\n    cast(tpep_pickup_datetime as timestamp) as pickup_datetime,\n    cast(tpep_dropoff_datetime as timestamp) as dropoff_datetime,\n    \n    -- trip info\n    store_and_fwd_flag,\n    safe_cast(passenger_count as INT64) as passenger_count,\n    cast(trip_distance as numeric) as trip_distance,\n    -- yellow cabs are always street-hail\n    1 as trip_type,\n    \n    -- payment info\n    cast(fare_amount as numeric) as fare_amount,\n    cast(extra as numeric) as extra,\n    cast(mta_tax as numeric) as mta_tax,\n    cast(tip_amount as numeric) as tip_amount,\n    cast(tolls_amount as numeric) as tolls_amount,\n    cast(0 as numeric) as ehail_fee,\n    cast(improvement_surcharge as numeric) as improvement_surcharge,\n    cast(total_amount as numeric) as total_amount,\n    coalesce(safe_cast(payment_type as INT64),0) as payment_type,\n    case safe_cast(payment_type as INT64)  \n        when 1 then 'Credit card'\n        when 2 then 'Cash'\n        when 3 then 'No charge'\n        when 4 then 'Dispute'\n        when 5 then 'Unknown'\n        when 6 then 'Voided trip'\n        else 'EMPTY'\n    end as payment_type_description\nfrom tripdata\nwhere rn = 1\n\n-- dbt build --select <model.sql> --vars '{'is_test_run: false}'\n\n\n  limit 100\n\n", "relation_name": "`dataengineering-449109`.`dbt_samuelckl`.`stg_yellow_tripdata`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-02-27T12:30:31.556772Z", "completed_at": "2025-02-27T12:30:31.595743Z"}, {"name": "execute", "started_at": "2025-02-27T12:30:31.596239Z", "completed_at": "2025-02-27T12:30:34.685114Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.131577253341675, "adapter_response": {"_message": "CREATE TABLE (265.0 rows, 14.2 KiB processed)", "code": "CREATE TABLE", "rows_affected": 265, "bytes_processed": 14504, "bytes_billed": 10485760, "location": "US", "project_id": "dataengineering-449109", "job_id": "5740bc1e-ab71-4a45-a139-2c9813cf9dbd", "slot_ms": 4884}, "message": "CREATE TABLE (265.0 rows, 14.2 KiB processed)", "failures": null, "unique_id": "model.dataEngineeringZoomcamp.dim_zones", "compiled": true, "compiled_code": "\n\nselect \n    locationid, \n    borough, \n    zone, \n    replace(service_zone,'Boro','Green') as service_zone \nfrom `dataengineering-449109`.`dbt_samuelckl`.`taxi_zone_lookup`", "relation_name": "`dataengineering-449109`.`dbt_samuelckl`.`dim_zones`", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-6 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dataEngineeringZoomcamp.fact_trips", "compiled": false, "compiled_code": null, "relation_name": "`dataengineering-449109`.`dbt_samuelckl`.`fact_trips`", "batch_results": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-5 (worker)", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dataEngineeringZoomcamp.dm_monthly_zone_revenue", "compiled": false, "compiled_code": null, "relation_name": "`dataengineering-449109`.`dbt_samuelckl`.`dm_monthly_zone_revenue`", "batch_results": null}], "elapsed_time": 4.312174081802368, "args": {"state_modified_compare_vars": false, "version_check": true, "show_resource_report": false, "target_path": "target", "warn_error_options": {"include": [], "exclude": []}, "quiet": false, "indirect_selection": "eager", "favor_state": false, "cache_selected_only": false, "empty": false, "send_anonymous_usage_stats": true, "skip_nodes_if_on_run_start_fails": false, "exclude": [], "strict_mode": false, "introspect": true, "require_batched_execution_for_custom_microbatch_strategy": false, "macro_debugging": false, "defer": false, "log_level": "info", "log_level_file": "debug", "project_dir": "/app/dbt_project/a2765bc5-a9e9-4068-82b8-d2ff4b6b523b", "require_nested_cumulative_type_params": false, "select": [], "state_modified_compare_more_unrendered_values": false, "use_fast_test_edges": false, "skip_write_msgpack_if_exist": false, "require_resource_names_without_spaces": false, "log_format": "json", "source_freshness_run_project_hooks": false, "partial_parse_file_diff": true, "log_file_max_bytes": 0, "static_parser": true, "vars": {}, "populate_cache": true, "invocation_command": "dbt ", "profile": "user", "profiles_dir": "./", "log_format_file": "json", "use_colors": true, "use_colors_file": true, "write_json": true, "require_yaml_configuration_for_mf_time_spines": false, "partial_parse": true, "print": true, "printer_width": 80, "log_path": "logs", "which": "run", "require_explicit_package_overrides_for_builtin_materializations": true}}